Field:
    type: object
    config:
        description: "An eZ Platform Content Field."
        fields:
            id:
                type: "Int"
                description: "Internal id of the field."
            fieldDefIdentifier:
                type: "String"
                description: "The field definition identifier."
            value:
                type: "FieldValue"
                description: "The value of the field."
            languageCode:
                type: "String"
                description: "The language code of the field."

FieldValue:
    type: interface
    config:
        fields:
            text:
                type: "String"
                description: "String representation of the value"
        resolveType: "@=resolver('FieldValueType', [value])"


GenericFieldValue:
    type: object
    config:
        fields:
            text:
                type: "String"
                description: "String representation of the value"
                resolve: "@=value"
        interfaces: [FieldValue]

TextLineFieldValue:
    type: object
    config:
        fields:
            text:
                type: "String"
                description: "String representation of the value"
                resolve: "@=value.text"
        interfaces: [FieldValue]

ImageFieldValue:
    type: object
    config:
        fields:
            text:
                type: "String"
                description: "String representation of the value"
                resolve: "@=value"
            id:
                type: "String"
                resolve: "@=value.id"
            alternativeText:
                type: "String"
                resolve: "@=value.alternativeText"
            fileName:
                type: "String"
                resolve: "@=value.fileName"
            fileSize:
                type: "Int"
                resolve: "@=value.fileSize"
            uri:
                type: "String"
                resolve: "@=value.uri"
            width:
                type: "Int"
                resolve: "@=value.width"
            height:
                type: "Int"
                resolve: "@=value.height"
            variations:
                type: "[ImageVariation]"
                args:
                    identifier:
                        type: "[String]"
                        description: "One or more variation identifiers."
                resolve: "@=resolver('ImageVariation', [value.value, args])"
        interfaces: [FieldValue]

ImageVariation:
    type: object
    config:
        fields:
            uri:
                type: "String"
            name:
                type: "String"
            mimeType:
                type: "String"
            fileName:
                type: "String"
            dirPath:
                type: "String"
            lastModified:
                type: "String"

AuthorFieldValue:
    type: object
    config:
        interfaces: [FieldValue]
        fields:
            text:
                type: "String"
                description: "String representation of the value"
                resolve: "@=value"
            authors:
                type: "[Author]"
                resolve: "@=value.authors"
Author:
    type: object
    config:
        fields:
            id:
                type: "Int"
            name:
                type: "String"
            email:
                type: "String"

BinaryFileFieldValue:
    type: object
    config:
        interfaces: [FieldValue]
        fields:
            text:
                type: "String"
                description: "String representation of the value"
                resolve: "@=value"

CheckboxFieldValue:
    type: object
    config:
        interfaces: [FieldValue]
        fields:
            text:
                type: "String"
                description: "String representation of the value"
                resolve: "@=value"

CountryFieldValue:
    type: object
    config:
        interfaces: [FieldValue]
        fields:
            text:
                type: "String"
                description: "String representation of the value"
                resolve: "@=value"

DateFieldValue:
    type: object
    config:
        interfaces: [FieldValue]
        fields:
            text:
                type: "String"
                description: "Unix timestamp"
                resolve: "@=value.value ? value.value.getTimestamp() : null"
            formatted:
                type: "String"
                description: "Formatted date"
                # @todo: refactor with a datetime resolver
                resolve: "@=resolver('DateTimeFormat', [args['format'], value.value])"
                args:
                    format:
                        type: String
                        description: "A format string compatible with PHP's date() function"

DateAndTimeFieldValue:
    type: object
    inherits: ["DateFieldValue"]
    config:
        interfaces: [FieldValue]

EmailAddressFieldValue:
    type: object
    config:
        interfaces: [FieldValue]
        fields:
            text:
                type: "String"
                description: "String representation of the value"
                resolve: "@=value.email"

FloatFieldValue:
    type: object
    config:
        interfaces: [FieldValue]
        fields:
            text:
                type: "String"
                description: "String representation of the value"
                resolve: "@=value.value"

IntegerFieldValue:
    type: object
    config:
        interfaces: [FieldValue]
        fields:
            text:
                type: "String"
                description: "String representation of the value"
                resolve: "@=value.value"

KeywordFieldValue:
    type: object
    config:
        interfaces: [FieldValue]
        fields:
            text:
                type: "String"
                description: "String representation of the value"
                # @todo will fail, array to string conversion
                resolve: "@=value"

MapLocationFieldValue:
    type: object
    config:
        interfaces: [FieldValue]
        fields:
            text:
                type: "String"
                description: "String representation of the value"
                resolve: "@=value"
            latitude:
                type: "String"
                resolve: "@=value.latitude"
            longitude:
                type: "String"
                resolve: "@=value.longitude"
            address:
                type: "String"
                resolve: "@=value.address"

MediaFieldValue:
    type: object
    config:
        interfaces: [FieldValue]
        fields:
            text:
                type: "String"
                description: "String representation of the value"
                resolve: "@=value.uri"
            hasController:
                type: "Boolean"
                description: "If the media has a controller when being displayed."
                resolve: "@=value.hasController"
            autoplay:
                type: "Boolean"
                description: "If the media should be automatically played."
                resolve: "@=value.autoplay"
            loop:
                type: "Boolean"
                description: "If the media should be played in a loop."
                resolve: "@=value.loop"
            height:
                type: "Int"
                description: "Height of the media."
                resolve: "@=value.height"
            width:
                type: "Int"
                description: "Width of the media."
                resolve: "@=value.widht"

PriceFieldValue:
    type: object
    config:
        interfaces: [FieldValue]
        fields:
            text:
                type: "String"
                description: "String representation of the value"
                resolve: "@=value"

RatingFieldValue:
    type: object
    config:
        interfaces: [FieldValue]
        fields:
            text:
                type: "String"
                description: "String representation of the value"
                resolve: "@=value"

RelationFieldValue:
    type: object
    config:
        interfaces: [FieldValue]
        fields:
            text:
                type: "String"
                description: "String representation of the value"
                resolve: "@=value"
            destinationContentItem:
                type: "Content"
                description: "The related Content item"
                resolve: "@=resolver('ContentById', [value.destinationContentId])"

RelationListFieldValue:
    type: object
    config:
        interfaces: [FieldValue]
        fields:
            text:
                type: "String"
                description: "String representation of the value"
                resolve: "@=value"
            destinationContentItems:
                type: "[Content]"
                description: "The related content items"
                resolve: "@=resolver('ContentByIdList', [value.destinationContentIds])"

RichTextFieldValue:
    type: object
    config:
        interfaces: [FieldValue]
        fields:
            text:
                type: "String"
                description: "String representation of the value"
                resolve: "@=value"
            plaintext:
                type: "String"
                description: "Plain text representation of the value, without tags."
                resolve: "@=resolver('RichTextXmlToPlainText', [value.xml.plain_text])"
            html5:
                type: "String"
                description: "HTML5 representation."
                resolve: "@=resolver('RichTextXmlToHtml5', [value.xml])"
            html5_edit:
                type: "String"
                description: "Editable HTML5 representation."
                resolve: "@=resolver('RichTextXmlToHtml5Edit', [value.xml])"

SelectionFieldValue:
    type: object
    config:
        interfaces: [FieldValue]
        fields:
            text:
                type: "String"
                description: "String representation of the value"
                resolve: "@=value"

TextBlockFieldValue:
    type: object
    config:
        interfaces: [FieldValue]
        fields:
            text:
                type: "String"
                description: "String representation of the value"
                resolve: "@=value"
